{"version":3,"sources":["backend/debug-host.ts","app.ts","environment.ts","main.ts","resources/index.ts","resources/elements/debug-group.ts","resources/elements/property-view.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { autoinject } from 'aurelia-dependency-injection';\n\ndeclare var aureliaDebugger;\n\nvar createAureliaDebugger = function () {\n  if (window['aureliaDebugger']) {\n    return;\n  }\n\n  (function () {\n    let nextDebugId = 0;\n\n    function getNextDebugId() {\n      return ++nextDebugId;\n    }\n\n    function createErrorObject(e) {\n      return {\n        bindingContext: {\n          properties: [\n            {\n              name: 'Debugger Error',\n              value: e.message,\n              type: 'string',\n              canEdit: false\n            }\n          ]\n        }\n      }\n    }\n\n    function attachedOwner(node) {\n      let ownerView = node.auOwnerView;\n\n      if (ownerView && ownerView.viewFactory) {\n        return ownerView;\n      }\n\n      return null;\n    }\n\n    function nodeIsImmediateChildOfView(view, node) {\n      let currentChild = view.firstChild\n      let lastChild = view.lastChild;\n      let nextChild;\n\n      while (currentChild) {\n        nextChild = currentChild.nextSibling;\n\n        if (currentChild === node) {\n          return true;\n        }\n\n        if (currentChild === lastChild) {\n          break;\n        }\n\n        currentChild = nextChild;\n      }\n\n      return false;\n    }\n\n    function findSiblingRepeaterView(node) {\n      if (!node) {\n        return null;\n      }\n\n      let current = node.nextSibling;\n\n      while (current) {\n        if (current.nodeType === 8 && current.viewSlot && current.data === 'anchor') {\n          let children = current.viewSlot.children;\n\n          for (let i = 0, ii = children.length; i < ii; ++i) {\n            let view = children[i];\n\n            if (nodeIsImmediateChildOfView(view, node)) {\n              return view;\n            }\n          }\n        }\n\n        current = current.nextSibling;\n      }\n\n      return null;\n    }\n\n    function findImmediateControllerOwningView(node) {\n      let parent = node.parentNode;\n\n      if (parent && parent.au && parent.au.controller\n        && parent.au.controller.view && nodeIsImmediateChildOfView(parent.au.controller.view, node)) {\n        return parent.au.controller.view;\n      }\n\n      return null;\n    }\n\n    function findComposingView(node) {\n      if (!node) {\n        return null;\n      }\n\n      if (node.aurelia) {\n        return node.aurelia.root.view;\n      } else if (attachedOwner(node)) {\n        return attachedOwner(node);\n      } else if (node.au) {\n        var au = node.au;\n\n        if (au.controller) { //custom element\n          var controller = au.controller;\n          var tagName = node.tagName ? node.tagName.toLowerCase() : null;\n\n          if (tagName === 'router-view') {\n            return controller.viewModel.view;\n          } else if (tagName === 'compose') {\n            return controller.viewModel.currentController.view;\n          } else if (controller['with']) {\n            return controller['with'].viewModel.view;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    function getDebugPropertyKeys(obj) {\n      let props = [];\n      const keys = [...Object.keys(obj), ...Object.getOwnPropertyNames(obj)];\n      const uniqueKeys = keys.filter((value, i, arr) => arr.indexOf(value) === i);\n\n      for (const key of uniqueKeys) {\n        if (key && !key.startsWith('_') && typeof obj[key] !== 'function') {\n          props.push(key);\n        }\n      }\n\n      return props;\n    }\n\n    window['aureliaDebugger'] = {\n      setValueOnDebugInfo(debugInfo, value, instance) {\n        try {\n          let expandableValue:any;\n\n          if (value instanceof Node) {\n            debugInfo.canExpand = true;\n            debugInfo.type = 'node';\n            debugInfo.value = value.constructor.name;\n            expandableValue = value;\n          } else if (Array.isArray(value)) {\n            debugInfo.canExpand = true;\n            debugInfo.type = 'array';\n            debugInfo.value = `Array[${value.length}]`;\n            expandableValue = value;\n          } else {\n            debugInfo.type = typeof value;\n            debugInfo.value = value;\n          }\n\n          if (value === null) {\n            debugInfo.type = 'null';\n            debugInfo.value = 'null';\n          } else if (value === undefined) {\n            debugInfo.type = 'undefined';\n            debugInfo.value = 'undefined';\n          } else if (debugInfo.type === 'object') {\n            debugInfo.canExpand = true;\n            expandableValue = value;\n\n            if (value.constructor) {\n              debugInfo.value = value.constructor.name;\n            } else {\n              debugInfo.value = 'Object';\n            }\n          }\n\n          if (debugInfo.type === 'string' || debugInfo.type === 'number' || debugInfo.type === 'boolean') {\n            debugInfo.canEdit = true;\n          }\n\n          debugInfo.debugId = debugInfo.debugId || getNextDebugId();\n\n          this.debugValueLookup[debugInfo.debugId] = Object.assign({\n            instance: instance,\n            expandableValue: expandableValue\n          }, debugInfo);\n\n          return debugInfo;\n        } catch(e) {\n          return createErrorObject(e);\n        }\n      },\n      createControllerDebugInfo(controller) {\n        try {\n          let controllerDebugInfo: any = {\n            name: controller.behavior.elementName || controller.behavior.attributeName\n          };\n\n          let viewModel = controller.viewModel;\n          let bindableKeys = {};\n\n          controllerDebugInfo.bindables = controller.behavior.properties.map(x => {\n            bindableKeys[x.name] = true;\n            return this.setValueOnDebugInfo({\n              name: x.name,\n              attribute: x.attribute,\n            }, viewModel[x.name], viewModel);\n          });\n\n          controllerDebugInfo.properties = getDebugPropertyKeys(viewModel)\n            .filter(x => !(x in bindableKeys))\n            .map(x => {\n              return this.setValueOnDebugInfo({\n                name: x\n              }, viewModel[x], viewModel);\n            });\n\n          return controllerDebugInfo;\n        } catch (e) {\n          return createErrorObject(e);\n        }\n      },\n      convertObjectToDebugInfo(obj, blackList) {\n        blackList = blackList || {};\n        return {\n          properties: getDebugPropertyKeys(obj)\n            .filter(x => !(x in blackList))\n            .map(x => {\n              return this.setValueOnDebugInfo({\n                name: x\n              }, obj[x], obj);\n            })\n        };\n      },\n      getDebugInfoForNode(selectedNode) {\n        try {\n          var debugInfo: any = {};\n\n          this.debugValueLookup = {};\n          this.nextDebugId = 0;\n\n          if (selectedNode.au) {\n            var au = selectedNode.au;\n\n            if (au.controller) {\n              debugInfo.customElement = this.createControllerDebugInfo(au.controller);\n            }\n\n            var tagName = selectedNode.tagName ? selectedNode.tagName.toLowerCase() : null;\n            var customAttributeNames = getDebugPropertyKeys(au)\n              .filter(function (key) {\n                return key !== 'controller' && key !== tagName;\n              });\n\n            if (customAttributeNames.length) {\n              debugInfo.customAttributes = customAttributeNames.map(x => this.createControllerDebugInfo(au[x]));\n            }\n          }\n\n          let owningView = this.findOwningViewOfNode(selectedNode);\n\n          if (owningView) {\n            if (owningView.bindingContext) {\n              debugInfo.bindingContext = this.convertObjectToDebugInfo(owningView.bindingContext);\n            }\n\n            if (owningView.overrideContext) {\n              debugInfo.overrideContext = this.convertObjectToDebugInfo(\n                owningView.overrideContext,\n                { bindingContext: true, parentOverrideContext: true }\n              );\n            }\n          }\n\n          return debugInfo;\n        } catch (e) {\n          return createErrorObject(e);\n        }\n      },\n      getExpandedDebugValueForId(id) {\n        let value = this.debugValueLookup[id].expandableValue;\n\n        if (Array.isArray(value)) {\n          let newValue = {};\n          value.forEach((value, index) => {\n            newValue[index] = value\n          });\n          value = newValue;\n        }\n\n        return this.convertObjectToDebugInfo(value);\n      },\n      findOwningViewOfNode(node) {\n        function moveUp(n) {\n          let current = n.parentNode;\n\n          if (current) {\n            return findComposingView(current) || findSiblingRepeaterView(current) || findImmediateControllerOwningView(current) || moveUp(current);\n          }\n\n          return null;\n        }\n\n        return attachedOwner(node) || findSiblingRepeaterView(node) || findImmediateControllerOwningView(node) || moveUp(node);\n      },\n      updateValueForId(id, value) {\n        let debugInfo = this.debugValueLookup[id];\n        debugInfo.instance[debugInfo.name] = value;\n        this.setValueOnDebugInfo(debugInfo, value, debugInfo.instance);\n      }\n    }\n  })();\n}\n\nexport class SelectionChanged {\n  constructor(public debugInfo) { }\n}\n\nexport interface IHostConsumer {\n  onSelectionChanged(event: SelectionChanged);\n}\n\n@autoinject\nexport class DebugHost {\n  attach(consumer: IHostConsumer) {\n    if (chrome && chrome.devtools) {\n      var code = \"(\" + createAureliaDebugger.toString() + \")(); aureliaDebugger.getDebugInfoForNode($0)\";\n\n      chrome.devtools.panels.elements.onSelectionChanged.addListener(() => {\n        chrome.devtools.inspectedWindow.eval(code, debugObject => {\n          consumer.onSelectionChanged(new SelectionChanged(debugObject))\n        });\n      });\n\n      chrome.devtools.inspectedWindow.eval(code, debugObject => {\n        consumer.onSelectionChanged(new SelectionChanged(debugObject))\n      });\n    }\n  }\n\n  updateDebugValue(debugInfo) {\n    let value = debugInfo.value;\n\n    if (debugInfo.type === 'string') {\n      value = \"'\" + value + \"'\";\n    }\n\n    let code = `aureliaDebugger.updateValueForId(${debugInfo.debugId}, ${value})`;\n    chrome.devtools.inspectedWindow.eval(code);\n  }\n\n  toggleDebugValueExpansion(debugInfo) {\n    if (debugInfo.canExpand) {\n      debugInfo.isExpanded = !debugInfo.isExpanded;\n\n      if (debugInfo.isExpanded && !debugInfo.expandedValue) {\n        let code = `aureliaDebugger.getExpandedDebugValueForId(${debugInfo.debugId});`;\n\n        chrome.devtools.inspectedWindow.eval(code, expandedValue => {\n          debugInfo.expandedValue = expandedValue;\n          debugInfo.isExpanded = true;\n        });\n      }\n    }\n  }\n}\n","import {DebugHost, SelectionChanged} from './backend/debug-host';\nimport {autoinject} from 'aurelia-dependency-injection';\n\n@autoinject\nexport class App {\n  debugInfo: any;\n  isDarkTheme: boolean = false;\n\n  constructor(private debugHost: DebugHost) {}\n\n  attached() {\n    this.debugHost.attach(this);\n    this.isDarkTheme = chrome && chrome.devtools && chrome.devtools.panels && (<any>chrome.devtools.panels).themeName === 'dark';\n\n    if (this.isDarkTheme) {\n      document.querySelector('html').style.background = '#202124'\n    }\n  }\n\n  onSelectionChanged(event: SelectionChanged) {\n    this.debugInfo = event.debugInfo;\n  }\n}\n\nexport class StringifyValueConverter {\n  toView(value) {\n    return JSON.stringify(value);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .defaultBindingLanguage()\n    .defaultResources()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    './elements/aurelia-logo.html',\n    './elements/debug-group',\n    './elements/controller-view.html',\n    './elements/property-view'\n  ]);\n}\n","import {bindable} from 'aurelia-templating';\n\nexport class DebugGroup {\n  @bindable heading: string;\n}\n","import {autoinject} from 'aurelia-dependency-injection';\nimport {bindable} from 'aurelia-templating';\nimport {TaskQueue} from 'aurelia-task-queue';\nimport {DebugHost} from '../../backend/debug-host';\n\n@autoinject\nexport class PropertyView {\n  @bindable property;\n  editor: HTMLInputElement;\n  \n  constructor(public debugHost: DebugHost, private taskQueue: TaskQueue) { }\n\n  beginEditing() {\n    if (this.property.canEdit) {\n      this.property.isEditing = true;\n      this.taskQueue.queueMicroTask(() => {\n        this.editor.focus();\n        this.editor.select();\n      });\n    }\n  }\n\n  onKeyDown(e: KeyboardEvent) {\n    if (e.keyCode === 13) {\n      this.endEditing();\n    }\n\n    return true;\n  }\n\n  endEditing() {\n    this.property.value = this.editor.value;\n    this.property.isEditing = false;\n    this.debugHost.updateDebugValue(this.property);\n  }\n}\n"],"sourceRoot":"../src"}